name: CI

on: push
  # push:
  #   branches:
  #     - main
  #     - master

jobs:

  build:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Install Modules
        run: yarn install
      - name: Install app deps
        run: npx electron-builder install-app-deps
      - name: Build app
        run: yarn build:universal
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Upload build artifacts
          path: dist/mac-universal/On-Illegibility.app
          retention-days: 5
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout  
        uses: actions/checkout@v2  
        with:  
            fetch-depth: 0  
      - name: Version  
        id: version  
        uses: juliansangillo/tag-version@v1  
        with:  
            production-branch: master
      - name: Download all build artifacts
        uses: actions/download-artifact@v2
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_COMPRESS: xz
          GHR_PATH: dist/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
