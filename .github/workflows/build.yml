name: CI

on: push
  # push:
  #   branches:
  #     - main
  #     - master

jobs:

  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  
        uses: actions/checkout@v2  
      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix:  'v'

  build:
    runs-on: macos-latest
    needs: [tag]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Install Modules
        run: yarn install
      - name: Install app deps
        run: npx electron-builder install-app-deps
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          args: --universal
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      # - name: Build app
      #   run: yarn build:universal
      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: On-Illegibility-${{ matrix.node-version }}
      #     path: dist/mac-universal/On-Illegibility.app
  # release:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - name: Checkout  
  #       uses: actions/checkout@v2  
  #       with:  
  #           fetch-depth: 0  
  #     - name: Version  
  #       id: version  
  #       uses: juliansangillo/tag-version@v1  
  #       with:  
  #           production-branch: master
      # - name: Download all build artifacts
      #   uses: actions/download-artifact@v2
      # - name: Release
      #   uses: fnkr/github-action-ghr@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     GHR_COMPRESS: xz
      #     GHR_PATH: dist/
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
